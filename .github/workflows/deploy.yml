# Requires secrets:
#   GCP_HOST_GCR                  The base host of the Google Cloud Registry
#   GCP_REGISTRY_PROJECT_ID       The GCP Project ID of the Google Cloud Registry
#   GCP_SA_KEY_GCR_PUSHER         The GCP Service Account key used to push on the Google Cloud Registry
#   GCP_GCR_REPOSITORY            The repository name of the app on the Google Cloud Registry
#   GCP_SA_KEY_CLOUDRUN_DEPLOYER  The GCP Service Account key used to deploy services on Cloud Run
#   GCP_PROJECT_ID                The GCP Project ID to deploy the app
#   GCP_CLOUDRUN_SERVICE          The name of the Cloud Run service to deploy
#   GCP_ZONE                      The region of the Cloud Run service
#

on:
  push:
    branches: [ main ]

env:
  IMAGE: ${{ secrets.GCP_HOST_GCR }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_CLOUDRUN_SERVICE }}
  TAG: ${{ github.ref_name }}-${{ github.sha }}

jobs:
  test:
    name: Test app
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'

      - name: Get Cache
        uses: actions/cache@v3.0.10
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt

  docker-build-push-gcr:
    name: Docker build & push on Google Cloud Registry
    runs-on: ubuntu-latest
    needs: [ test ]

    steps:
      - uses: actions/checkout@v3
     
      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.GCP_ZONE }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY_CLOUDRUN_DEPLOYER }}
     
      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
             ${{ secrets.GCP_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}:latest

  deploy-prod:
      name: Deploy to Prod
      runs-on: ubuntu-latest
      needs: [ docker-build-push-gcr ]
      environment: production

      steps:
        - name: Google Auth
          id: auth
          uses: 'google-github-actions/auth@v0'
          with:
            credentials_json: ${{ secrets.GCP_SA_KEY_CLOUDRUN_DEPLOYER }}

        - uses: google-github-actions/deploy-cloudrun@main
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service: ${{ secrets.GCP_CLOUDRUN_SERVICE }}
            image: ${{ secrets.GCP_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_PROJECT_ID }}:latest
            region: ${{ secrets.GCP_ZONE }}
